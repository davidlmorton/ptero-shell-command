[tox]
minversion = 2.0
envlist = py27

[testenv]
# usedevelop is needed to ensure coverage is calculated properly
usedevelop=True
passenv = *
setenv =
    PTERO_SHELL_COMMAND_CELERYD_PREFETCH_MULTIPLIER={env:PTERO_SHELL_COMMAND_CELERYD_PREFETCH_MULTIPLIER:1}
    PTERO_SHELL_COMMAND_CELERY_BROKER_HEARTBEAT={env:PTERO_SHELL_COMMAND_CELERY_BROKER_HEARTBEAT:300}
    PTERO_SHELL_COMMAND_CELERY_BROKER_HEARTBEAT_CHECKRATE={env:PTERO_SHELL_COMMAND_CELERY_BROKER_HEARTBEAT_CHECKRATE:5}
    PTERO_SHELL_COMMAND_CELERY_BROKER_URL={env:PTERO_SHELL_COMMAND_CELERY_BROKER_URL:amqp://localhost:5999}
    PTERO_SHELL_COMMAND_CELERY_RESULT_BACKEND={env:PTERO_SHELL_COMMAND_CELERY_RESULT_BACKEND:amqp://localhost:5999}
    PTERO_SHELL_COMMAND_CELERY_TRACK_STARTED={env:PTERO_SHELL_COMMAND_CELERY_TRACK_STARTED:1}
    PTERO_SHELL_COMMAND_DB_STRING={env:PTERO_SHELL_COMMAND_DB_STRING:postgres://postgres@127.0.0.1/ptero_shell_command}
    PTERO_SHELL_COMMAND_HOST={env:PTERO_SHELL_COMMAND_HOST:localhost}
    PTERO_SHELL_COMMAND_KILL_INTERVAL = {env:PTERO_SHELL_COMMAND_KILL_INTERVAL:10}
    PTERO_SHELL_COMMAND_LOG_LEVEL={env:PTERO_SHELL_COMMAND_LOG_LEVEL:DEBUG}
    PTERO_SHELL_COMMAND_LOG_WITH_TIMESTAMPS={env:PTERO_SHELL_COMMAND_LOG_WITH_TIMESTAMPS:0}
    PTERO_SHELL_COMMAND_CHILD_POLLING_INTERVAL = {env:PTERO_SHELL_COMMAND_CHILD_POLLING_INTERVAL:0.1}
    PTERO_SHELL_COMMAND_DB_POLLING_INTERVAL = {env:PTERO_SHELL_COMMAND_DB_POLLING_INTERVAL:10}
    PTERO_SHELL_COMMAND_PORT={env:PTERO_SHELL_COMMAND_PORT:5200}
    PTERO_SHELL_COMMAND_RABBITMQ_LOG_BASE={env:PTERO_SHELL_COMMAND_RABBITMQ_LOG_BASE:var/log}
    PTERO_SHELL_COMMAND_RABBITMQ_MNESIA_BASE={env:PTERO_SHELL_COMMAND_RABBITMQ_MNESIA_BASE:var/rabbitmqdata}
    PTERO_SHELL_COMMAND_RABBITMQ_NODENAME={env:PTERO_SHELL_COMMAND_RABBITMQ_NODENAME:ptero-shell-commandrabbitmq}
    PTERO_SHELL_COMMAND_RABBITMQ_NODE_PORT={env:PTERO_SHELL_COMMAND_RABBITMQ_NODE_PORT:5999}
    PYTHONUNBUFFERED={env:PYTHONUNBUFFERED:1}
whitelist_externals =
    rm
    find
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/test-requirements.txt
commands =
    find {toxinidir}/ptero_shell_command -name '*.pyc' -delete
    teardown_devserver {toxinidir}/var/run/devserver.pid
    rm -rf {toxinidir}/var
    coverage combine
    coverage erase

    {toxinidir}/scripts/purge-backends --force --postgres
    devserver --procfile {env:PTERO_SHELL_COMMAND_TEST_PROCFILE:{toxinidir}/tests/scripts/Procfile} --logdir {toxinidir}/var/log --daemondir {toxinidir}/var/run
    wait_for_service PTERO_SHELL_COMMAND_HOST PTERO_SHELL_COMMAND_PORT
    wait_for_service PTERO_SHELL_COMMAND_HOST PTERO_SHELL_COMMAND_RABBITMQ_NODE_PORT
    coverage run {envbindir}/nosetests {posargs}

    teardown_devserver {toxinidir}/var/run/devserver.pid
    coverage combine
    coverage report
    flake8

[testenv:dev]
passenv = *
commands =
    find {toxinidir}/ptero_shell_command -name '*.pyc' -delete
    {toxinidir}/scripts/purge-backends --force --postgres
    rm -rf {toxinidir}/var
    devserver --procfile {toxinidir}/tests/scripts/Procfile {posargs}

[testenv:dev-noenv]
passenv = *
setenv =
commands =
    find {toxinidir}/ptero_shell_command -name '*.pyc' -delete
    {toxinidir}/scripts/purge-backends --force --postgres
    rm -rf {toxinidir}/var
    devserver --procfile {toxinidir}/tests/scripts/Procfile {posargs}

[testenv:alembic]
passenv = *
commands =
    {envbindir}/alembic {posargs}

[testenv:tests-only]
passenv = *
setenv =
commands =
    {envbindir}/nosetests {posargs}

[flake8]
max-line-length = 80
exclude = *.egg
max-complexity = 8
ignore = E12,E128
